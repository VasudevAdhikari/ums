# Generated by Django 5.1.1 on 2025-04-16 08:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_user_city_user_phone_alter_user_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(db_index=True, default='', max_length=254, unique=True)),
                ('phone', models.CharField(default='', max_length=20)),
                ('city', models.CharField(default='', max_length=100)),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now)),
                ('telegram_username', models.CharField(default='', max_length=50)),
                ('outlook_email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('profile_picture', models.ImageField(default='default_profile.png', upload_to='profile_pictures/')),
                ('password_last_changed_at', models.DateTimeField(auto_now_add=True)),
                ('password_reset_token', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='O', max_length=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(default=None, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment_type', models.CharField(choices=[('Q', 'Quiz'), ('A', 'Assignment'), ('M', 'Midterm'), ('F', 'Final'), ('P', 'Project')], default='Q', max_length=1)),
                ('percentage', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact_name', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(default='', max_length=254)),
                ('phone', models.CharField(default='', max_length=20)),
                ('relation_to_user', models.CharField(default='', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('contact_email', models.EmailField(default='', max_length=254)),
                ('contact_phone', models.CharField(default='', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='authorization.user')),
                ('degree', models.CharField(default='', max_length=100)),
                ('position_in_university', models.CharField(default='', max_length=100)),
                ('office_location', models.CharField(default='', max_length=100)),
                ('admin_level', models.CharField(choices=[('R', 'Root'), ('S', 'Senior'), ('J', 'Junior'), ('V', 'Viewer')], default='V', max_length=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='authorization.user')),
                ('degree', models.CharField(default='', max_length=100)),
                ('position_in_university', models.CharField(default='', max_length=100)),
                ('is_hod', models.BooleanField(default=False)),
                ('is_hof', models.BooleanField(default=False)),
                ('joined_date', models.DateField(default=django.utils.timezone.now)),
                ('specialization', models.CharField(default='', max_length=100)),
                ('employment_status', models.CharField(choices=[('A', 'Active'), ('L', 'OnLeave'), ('R', 'Retired')], default='A', max_length=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='authorization.user')),
                ('student_number', models.CharField(default='', max_length=20, unique=True)),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('A', 'Active'), ('G', 'Graduated'), ('S', 'Suspended'), ('D', 'Dropped')], default='A', max_length=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.JSONField(default=dict)),
                ('sample_answer', models.JSONField(default=dict)),
                ('for_which_students', models.JSONField(default=list)),
                ('assigned_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(default=django.utils.timezone.now)),
                ('assessment_scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.assessmentscheme')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(default='', max_length=50)),
                ('target_table', models.CharField(default='', max_length=50)),
                ('target_id', models.PositiveIntegerField(default=0)),
                ('action_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(default='0.0.0.0')),
                ('description', models.TextField(default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('file_link', models.URLField(default='')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='emergency_contact',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authorization.emergencycontact'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
                ('office_location', models.CharField(default='', max_length=100)),
                ('contact_email', models.EmailField(default='', max_length=254)),
                ('contact_phone', models.CharField(default='', max_length=20)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.faculty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('semester_count', models.PositiveIntegerField(default=8)),
                ('description', models.TextField(default='')),
                ('total_credits', models.PositiveIntegerField(default=120)),
                ('degree_type', models.CharField(choices=[('B', 'Bachelors'), ('M', 'Masters'), ('P', 'PhD')], default='B', max_length=1)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.faculty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(default='0.0.0.0')),
                ('attempt_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('success', models.BooleanField(default=False)),
                ('user_agent', models.TextField(default='')),
                ('location_info', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MailboxAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointed_date', models.DateField(default=django.utils.timezone.now)),
                ('added_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_admins', to='authorization.mailboxadmin')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MailboxPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.JSONField(default=dict)),
                ('approved_at', models.DateTimeField(default=None, null=True)),
                ('reactions', models.JSONField(default=dict)),
                ('approved_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authorization.mailboxadmin')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(default='')),
                ('reactions', models.JSONField(default=dict)),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='authorization.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.mailboxpost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('otp_code', models.CharField(default='', max_length=100)),
                ('generated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('old_password_hash', models.CharField(default='', max_length=100)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('semester_name', models.CharField(default='', max_length=100)),
                ('enrollment_scheme', models.JSONField(default=dict)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.degree')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course_name', models.CharField(default='', max_length=100)),
                ('is_elective', models.BooleanField(default=False)),
                ('credit_hours', models.PositiveIntegerField(default=3)),
                ('course_code', models.CharField(default='', max_length=20)),
                ('description', models.TextField(default='')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.department')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField(default=2025)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.semester')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_date', models.DateField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.course')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.term')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.instructor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='assessmentscheme',
            name='term_instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.terminstructor'),
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_token', models.CharField(default='', max_length=100)),
                ('login_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('logout_time', models.DateTimeField(default=None, null=True)),
                ('ip_address', models.GenericIPAddressField(default='0.0.0.0')),
                ('user_agent', models.TextField(default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoConference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meeting_name', models.CharField(default='', max_length=100)),
                ('meeting_code', models.CharField(default='', max_length=50, unique=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('attendees', models.JSONField(default=list)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='instructor',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.department'),
        ),
        migrations.CreateModel(
            name='StudentTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.term')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='student',
            name='degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.degree'),
        ),
        migrations.AddField(
            model_name='mailboxadmin',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.student'),
        ),
        migrations.CreateModel(
            name='AssessmentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer', models.JSONField(default=dict)),
                ('mark', models.PositiveIntegerField(default=0)),
                ('graded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.assessment')),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.instructor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authorization.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_term', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='authorization.studentterm')),
                ('enrollment_form', models.JSONField(default=dict)),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('handled_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authorization.admin')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
